{"title":{"titleText":"Процедура Dispose","type":"Процедура"},"description":[{"type":"text","data":"Освобождает место, занятое динамической переменной в памяти."},{"type":"subtitle","data":"Объявление:"},{"type":"text","data":"Procedure Dispose(Var P : Pointer [ , Destructor ]);\r\n"},{"type":"subtitle","data":"Режим:"},{"type":"text","data":"Windows,  Protected,  Real"},{"type":"subtitle","data":"Замечание:"},{"type":"text","data":"Не должна использоваться совместно с процедурами Mark или Release. Объявление процедуры Dispose, было расширено так, что теперь она может также освобождать память занятую объектом, распределенным в куче, если вы передаете деструктор этого объекта как второй параметр, например: Dispose(P, Done); После обращения к Dispose, значение указателя P становится неопределенным и ссылаться на него является ошибкой. Если P не указывает на область памяти в куче, то происходит ошибка во время выполнения программы."},{"type":"subtitle","data":"Пример:"},{"type":"code","data":"{ Пример программы для процедур New и Dispose }\r\n \r\nType Str18 = String[18];\r\n\r\nvar P : ^Str18;\r\n \r\nBegin\r\n    New(P);\r\n    P^:='Сейчас переменная есть...';\r\n    Dispose(P);  { А теперь уже нет... }\r\nEnd."}]}
{"title":{"titleText":"Процедура Fail","type":"Процедура"},"description":[{"type":"text","data":"Процедура Fail, вызванная внутри конструктора заставляет его освободить динамический объект, который он только что распределил."},{"type":"subtitle","data":"Объявление:"},{"type":"text","data":" Procedure Fail;"},{"type":"subtitle","data":"Режим:"},{"type":"text","data":"Real, Protected"},{"type":"subtitle","data":"Замечание:"},{"type":"text","data":"Fail вызывается только в том случае, если одна из операций конструктора терпит неудачу."},{"type":"subtitle","data":"Пример:"},{"type":"code","data":"{Пример программы для процедуры Fail}\r\n\r\n{$F+}\r\nFunction HeapFunc(Size : Word) : Integer;\r\nBegin\r\n HeapFunc:=1;   { Возвращает NIL, если вне кучи }\r\nEnd;\r\n{$F-}\r\n\r\nType CharPtr: ^Char;\r\n   BigString= Object   { Хранит большие строки }\r\n           Len: Word;\r\n           Txt: CharPtr;\r\n   Constructor Init(Size: Word; Contents: CharPtr);\r\n     Procedure Show;\r\n              ...\r\n    Destructor Done;\r\n               End;\r\n\r\nConstructor BigString.Init(Size: Word; Contents: CharPtr);\r\nBegin\r\n Len:=Size;\r\n GetMem(Txt, Size);\r\n If Txt = NIL Then Fail; {Выходим с сообщением об ошибке}\r\n Move(Contents^, Txt^, Size);\r\nEnd;\r\n\r\nDestructor BigString.Done;\r\nBegin\r\n FreeMem(Txt, Len);\r\nEnd;"}]}
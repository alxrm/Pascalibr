{
  "title": {
    "titleText": "Процедура Mark",
    "type": "Процедура"
  },
  "description": [
    {
      "type": "text",
      "data": "Записывает состояние кучи в указатель."
    },
    {
      "type": "subtitle",
      "data": "Объявление:"
    },
    {
      "type": "text",
      "data": "Procedure Mark(Var P : Pointer);"
    },
    {
      "type": "subtitle",
      "data": "Режим:"
    },
    {
      "type": "text",
      "data": "Real, Protected"
    },
    {
      "type": "subtitle",
      "data": "Ограничения:"
    },
    {
      "type": "text",
      "data": "Не должна использоваться совместно с FreeMem или Dispose."
    },
    {
      "type": "subtitle",
      "data": "Пример:"
    },
    {
      "type": "code",
      "data": "{ Пример программы для процедур Mark и Release }\r\n\r\nVar        P: Pointer;\r\n  P1, P2, P3: ^Integer;\r\n\r\nBegin\r\n New(P1); { Распределяем память под Integer }\r\n Mark(P); { Сохраняем состояние кучи }\r\n New(P2); { Распределяем память под еще два числа типа Integer }\r\n New(P3);\r\n Release(P); { Память, резервированная для P2^ и P3^\r\n               освобождается, а память для P1^ все еще\r\n               может быть использована }\r\nEnd."
    }
  ]
}